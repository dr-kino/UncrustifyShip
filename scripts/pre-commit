#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

echo "## Git Pre-Commit hook execution"
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If there are whitespace errors, print the offending file names and fail.
#exec git diff-index --check --cached $against --

echo "## Executing uncrustify"
# CONFIGURATION
# set uncrustify config location
UNCRUST_CONFIG="scripts/style.cfg"
echo "$UNCRUST_CONFIG"
# get list of staged files
staged_files=$(git diff --name-only --staged | grep -i -E -- 'src' | grep -E '\.(c|h|cpp|hpp)$')
echo "$staged_files"

if [ -n "$staged_files" ]; then
    uncrustify -c $UNCRUST_CONFIG $staged_files --replace --no-backup
    if [ $? -ne 0 ]; then
        exit 1
    fi
    git add $staged_files
fi
echo "## Style checked and changes commited"
